{"version":3,"sources":["components/Login.js","components/Collage.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Login","className","style","justifyContent","Grid","container","spacing","direction","alignItems","justify","minHeight","item","xs","textAlign","redirectUri","clientID","scopes","Scopes","userReadPrivate","Collage","props","data","this","images","rows","columns","console","log","gridTemplateColumns","gridTemplateRows","map","src","React","Component","Home","state","type","date","Array","handleTypeChange","bind","handleDateChange","handleRowChange","handleColumnChange","generateCollage","limit","token","Cookies","get","config","headers","Authorization","axios","then","response","coversArray","items","key","push","url","setState","event","target","value","Select","labelId","id","onChange","MenuItem","TextField","label","InputProps","inputProps","max","min","InputLabelProps","shrink","Button","onClick","variant","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2340a13.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { SpotifyAuth, Scopes } from \"react-spotify-auth\";\r\nimport \"react-spotify-auth/dist/index.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../css/Login.css\";\r\nconst Login = () => {\r\n  return (\r\n    <div className=\"Login\" style={{ justifyContent: \"center\" }}>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <h1>Spotify Collage Generator And Stats</h1>\r\n\r\n        <Grid\r\n          item\r\n          xs={3}\r\n          style={{ textAlign: \"center\" }}\r\n          className=\"login-form\"\r\n        >\r\n          <SpotifyAuth\r\n            redirectUri=\"https://kacpersmal.github.io/spotify-collage-generator/callback\"\r\n            clientID=\"1a70ba777fec4ffd9633c0c418bdcf39\"\r\n            scopes={[Scopes.userReadPrivate, \"user-top-read\"]}\r\n          />\r\n          <p>Don't worry! I can't hack you :)</p>\r\n          <p>\r\n            I'm using spotify auth API it is secure and I don't have any access\r\n            to your credentials!\r\n          </p>\r\n          <p>By Kacper Smal </p>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"../css/Collage.css\";\r\nclass Collage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    const data = this.props.images;\r\n    const rows = this.props.rows;\r\n    const columns = this.props.columns;\r\n    console.log(data);\r\n    return (\r\n      <div\r\n        className=\"collage-box\"\r\n        style={{\r\n          gridTemplateColumns: `repeat(${columns}, 1fr)`,\r\n          gridTemplateRows: `repeat(${rows},1fr)`,\r\n        }}\r\n      >\r\n        {data.map((src) => {\r\n          return <img className=\"collage-image\" src={src}></img>;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Collage;\r\n","import React from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../css/Home.css\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport Collage from \"../components/Collage\";\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      type: \"artists\",\r\n      date: \"short_term\",\r\n      rows: 5,\r\n      columns: 5,\r\n      images: Array(),\r\n    };\r\n\r\n    this.handleTypeChange = this.handleTypeChange.bind(this);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.handleRowChange = this.handleRowChange.bind(this);\r\n    this.handleColumnChange = this.handleColumnChange.bind(this);\r\n    this.generateCollage = this.generateCollage.bind(this);\r\n  }\r\n\r\n  generateCollage() {\r\n    let limit = this.state.rows * this.state.columns;\r\n    let token = Cookies.get(\"spotifyAuthToken\");\r\n    let config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n    axios\r\n      .get(\r\n        `https://api.spotify.com/v1/me/top/${this.state.type}?time_range=${this.state.date}&limit=${limit}&offset=0`,\r\n        config\r\n      )\r\n      .then((response) => {\r\n        let coversArray = Array();\r\n        response.data.items.map((data, key) => {\r\n          coversArray.push(data.images[0].url);\r\n        });\r\n        this.setState({ images: coversArray });\r\n      });\r\n  }\r\n\r\n  handleTypeChange(event) {\r\n    this.setState({ type: event.target.value });\r\n  }\r\n\r\n  handleRowChange(event) {\r\n    this.setState({ rows: event.target.value });\r\n  }\r\n\r\n  handleColumnChange(event) {\r\n    this.setState({ columns: event.target.value });\r\n  }\r\n\r\n  handleDateChange(event) {\r\n    this.setState({ date: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            style={{ textAlign: \"center\" }}\r\n            className=\"home-base-form\"\r\n          >\r\n            <div>\r\n              <Grid className=\"input-flex\">\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={this.state.type}\r\n                  onChange={this.handleTypeChange}\r\n                >\r\n                  <MenuItem value={\"artists\"}>Artists</MenuItem>\r\n                  <MenuItem value={\"songs\"}>Songs</MenuItem>\r\n                </Select>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={this.state.date}\r\n                  onChange={this.handleDateChange}\r\n                >\r\n                  <MenuItem value={\"short_term\"}>Month</MenuItem>\r\n                  <MenuItem value={\"medium_term\"}>6 Months</MenuItem>\r\n                  <MenuItem value={\"long_term\"}>All Time</MenuItem>\r\n                </Select>\r\n                <TextField\r\n                  id=\"standard-number\"\r\n                  label=\"Rows\"\r\n                  onChange={this.handleRowChange}\r\n                  InputProps={{\r\n                    inputProps: {\r\n                      max: 7,\r\n                      min: 1,\r\n                    },\r\n                  }}\r\n                  type=\"number\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  id=\"standard-number\"\r\n                  label=\"Columns\"\r\n                  onChange={this.handleColumnChange}\r\n                  InputProps={{\r\n                    inputProps: {\r\n                      max: 7,\r\n                      min: 1,\r\n                    },\r\n                  }}\r\n                  type=\"number\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n                <Button onClick={this.generateCollage} variant=\"contained\">\r\n                  Generate\r\n                </Button>\r\n              </Grid>\r\n            </div>\r\n            {this.state.images.length > 0 && (\r\n              <Collage\r\n                rows={this.state.rows}\r\n                columns={this.state.columns}\r\n                images={this.state.images}\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport Cookies from \"js-cookie\";\nimport Login from \"./components/Login\";\nimport Home from \"./components/Home\";\n\nconst App = () => {\n  const token = Cookies.get(\"spotifyAuthToken\");\n  return (\n    <div className=\"app\">{token ? <Home token={token} /> : <Login />}</div>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}